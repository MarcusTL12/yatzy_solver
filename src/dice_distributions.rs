use std::collections::HashMap;

use ndarray::{Array1, Array3};
use once_cell::sync::Lazy;

use crate::dice_throw::DiceThrow;

// To make clippy happy :)
type DiceDistributionType = (
    (),
    [([u8; 1], u32); 6],
    [([u8; 2], u32); 21],
    [([u8; 3], u32); 56],
    [([u8; 4], u32); 126],
    [([u8; 5], u32); 252],
    [([u8; 6], u32); 462],
);

pub const DICE_DISTR: DiceDistributionType = (
    (),
    [([1], 1), ([2], 1), ([3], 1), ([4], 1), ([5], 1), ([6], 1)],
    [
        ([1, 1], 1),
        ([1, 2], 2),
        ([1, 3], 2),
        ([1, 4], 2),
        ([1, 5], 2),
        ([1, 6], 2),
        ([2, 2], 1),
        ([2, 3], 2),
        ([2, 4], 2),
        ([2, 5], 2),
        ([2, 6], 2),
        ([3, 3], 1),
        ([3, 4], 2),
        ([3, 5], 2),
        ([3, 6], 2),
        ([4, 4], 1),
        ([4, 5], 2),
        ([4, 6], 2),
        ([5, 5], 1),
        ([5, 6], 2),
        ([6, 6], 1),
    ],
    [
        ([1, 1, 1], 1),
        ([1, 1, 2], 3),
        ([1, 1, 3], 3),
        ([1, 1, 4], 3),
        ([1, 1, 5], 3),
        ([1, 1, 6], 3),
        ([1, 2, 2], 3),
        ([1, 2, 3], 6),
        ([1, 2, 4], 6),
        ([1, 2, 5], 6),
        ([1, 2, 6], 6),
        ([1, 3, 3], 3),
        ([1, 3, 4], 6),
        ([1, 3, 5], 6),
        ([1, 3, 6], 6),
        ([1, 4, 4], 3),
        ([1, 4, 5], 6),
        ([1, 4, 6], 6),
        ([1, 5, 5], 3),
        ([1, 5, 6], 6),
        ([1, 6, 6], 3),
        ([2, 2, 2], 1),
        ([2, 2, 3], 3),
        ([2, 2, 4], 3),
        ([2, 2, 5], 3),
        ([2, 2, 6], 3),
        ([2, 3, 3], 3),
        ([2, 3, 4], 6),
        ([2, 3, 5], 6),
        ([2, 3, 6], 6),
        ([2, 4, 4], 3),
        ([2, 4, 5], 6),
        ([2, 4, 6], 6),
        ([2, 5, 5], 3),
        ([2, 5, 6], 6),
        ([2, 6, 6], 3),
        ([3, 3, 3], 1),
        ([3, 3, 4], 3),
        ([3, 3, 5], 3),
        ([3, 3, 6], 3),
        ([3, 4, 4], 3),
        ([3, 4, 5], 6),
        ([3, 4, 6], 6),
        ([3, 5, 5], 3),
        ([3, 5, 6], 6),
        ([3, 6, 6], 3),
        ([4, 4, 4], 1),
        ([4, 4, 5], 3),
        ([4, 4, 6], 3),
        ([4, 5, 5], 3),
        ([4, 5, 6], 6),
        ([4, 6, 6], 3),
        ([5, 5, 5], 1),
        ([5, 5, 6], 3),
        ([5, 6, 6], 3),
        ([6, 6, 6], 1),
    ],
    [
        ([1, 1, 1, 1], 1),
        ([1, 1, 1, 2], 4),
        ([1, 1, 1, 3], 4),
        ([1, 1, 1, 4], 4),
        ([1, 1, 1, 5], 4),
        ([1, 1, 1, 6], 4),
        ([1, 1, 2, 2], 6),
        ([1, 1, 2, 3], 12),
        ([1, 1, 2, 4], 12),
        ([1, 1, 2, 5], 12),
        ([1, 1, 2, 6], 12),
        ([1, 1, 3, 3], 6),
        ([1, 1, 3, 4], 12),
        ([1, 1, 3, 5], 12),
        ([1, 1, 3, 6], 12),
        ([1, 1, 4, 4], 6),
        ([1, 1, 4, 5], 12),
        ([1, 1, 4, 6], 12),
        ([1, 1, 5, 5], 6),
        ([1, 1, 5, 6], 12),
        ([1, 1, 6, 6], 6),
        ([1, 2, 2, 2], 4),
        ([1, 2, 2, 3], 12),
        ([1, 2, 2, 4], 12),
        ([1, 2, 2, 5], 12),
        ([1, 2, 2, 6], 12),
        ([1, 2, 3, 3], 12),
        ([1, 2, 3, 4], 24),
        ([1, 2, 3, 5], 24),
        ([1, 2, 3, 6], 24),
        ([1, 2, 4, 4], 12),
        ([1, 2, 4, 5], 24),
        ([1, 2, 4, 6], 24),
        ([1, 2, 5, 5], 12),
        ([1, 2, 5, 6], 24),
        ([1, 2, 6, 6], 12),
        ([1, 3, 3, 3], 4),
        ([1, 3, 3, 4], 12),
        ([1, 3, 3, 5], 12),
        ([1, 3, 3, 6], 12),
        ([1, 3, 4, 4], 12),
        ([1, 3, 4, 5], 24),
        ([1, 3, 4, 6], 24),
        ([1, 3, 5, 5], 12),
        ([1, 3, 5, 6], 24),
        ([1, 3, 6, 6], 12),
        ([1, 4, 4, 4], 4),
        ([1, 4, 4, 5], 12),
        ([1, 4, 4, 6], 12),
        ([1, 4, 5, 5], 12),
        ([1, 4, 5, 6], 24),
        ([1, 4, 6, 6], 12),
        ([1, 5, 5, 5], 4),
        ([1, 5, 5, 6], 12),
        ([1, 5, 6, 6], 12),
        ([1, 6, 6, 6], 4),
        ([2, 2, 2, 2], 1),
        ([2, 2, 2, 3], 4),
        ([2, 2, 2, 4], 4),
        ([2, 2, 2, 5], 4),
        ([2, 2, 2, 6], 4),
        ([2, 2, 3, 3], 6),
        ([2, 2, 3, 4], 12),
        ([2, 2, 3, 5], 12),
        ([2, 2, 3, 6], 12),
        ([2, 2, 4, 4], 6),
        ([2, 2, 4, 5], 12),
        ([2, 2, 4, 6], 12),
        ([2, 2, 5, 5], 6),
        ([2, 2, 5, 6], 12),
        ([2, 2, 6, 6], 6),
        ([2, 3, 3, 3], 4),
        ([2, 3, 3, 4], 12),
        ([2, 3, 3, 5], 12),
        ([2, 3, 3, 6], 12),
        ([2, 3, 4, 4], 12),
        ([2, 3, 4, 5], 24),
        ([2, 3, 4, 6], 24),
        ([2, 3, 5, 5], 12),
        ([2, 3, 5, 6], 24),
        ([2, 3, 6, 6], 12),
        ([2, 4, 4, 4], 4),
        ([2, 4, 4, 5], 12),
        ([2, 4, 4, 6], 12),
        ([2, 4, 5, 5], 12),
        ([2, 4, 5, 6], 24),
        ([2, 4, 6, 6], 12),
        ([2, 5, 5, 5], 4),
        ([2, 5, 5, 6], 12),
        ([2, 5, 6, 6], 12),
        ([2, 6, 6, 6], 4),
        ([3, 3, 3, 3], 1),
        ([3, 3, 3, 4], 4),
        ([3, 3, 3, 5], 4),
        ([3, 3, 3, 6], 4),
        ([3, 3, 4, 4], 6),
        ([3, 3, 4, 5], 12),
        ([3, 3, 4, 6], 12),
        ([3, 3, 5, 5], 6),
        ([3, 3, 5, 6], 12),
        ([3, 3, 6, 6], 6),
        ([3, 4, 4, 4], 4),
        ([3, 4, 4, 5], 12),
        ([3, 4, 4, 6], 12),
        ([3, 4, 5, 5], 12),
        ([3, 4, 5, 6], 24),
        ([3, 4, 6, 6], 12),
        ([3, 5, 5, 5], 4),
        ([3, 5, 5, 6], 12),
        ([3, 5, 6, 6], 12),
        ([3, 6, 6, 6], 4),
        ([4, 4, 4, 4], 1),
        ([4, 4, 4, 5], 4),
        ([4, 4, 4, 6], 4),
        ([4, 4, 5, 5], 6),
        ([4, 4, 5, 6], 12),
        ([4, 4, 6, 6], 6),
        ([4, 5, 5, 5], 4),
        ([4, 5, 5, 6], 12),
        ([4, 5, 6, 6], 12),
        ([4, 6, 6, 6], 4),
        ([5, 5, 5, 5], 1),
        ([5, 5, 5, 6], 4),
        ([5, 5, 6, 6], 6),
        ([5, 6, 6, 6], 4),
        ([6, 6, 6, 6], 1),
    ],
    [
        ([1, 1, 1, 1, 1], 1),
        ([1, 1, 1, 1, 2], 5),
        ([1, 1, 1, 1, 3], 5),
        ([1, 1, 1, 1, 4], 5),
        ([1, 1, 1, 1, 5], 5),
        ([1, 1, 1, 1, 6], 5),
        ([1, 1, 1, 2, 2], 10),
        ([1, 1, 1, 2, 3], 20),
        ([1, 1, 1, 2, 4], 20),
        ([1, 1, 1, 2, 5], 20),
        ([1, 1, 1, 2, 6], 20),
        ([1, 1, 1, 3, 3], 10),
        ([1, 1, 1, 3, 4], 20),
        ([1, 1, 1, 3, 5], 20),
        ([1, 1, 1, 3, 6], 20),
        ([1, 1, 1, 4, 4], 10),
        ([1, 1, 1, 4, 5], 20),
        ([1, 1, 1, 4, 6], 20),
        ([1, 1, 1, 5, 5], 10),
        ([1, 1, 1, 5, 6], 20),
        ([1, 1, 1, 6, 6], 10),
        ([1, 1, 2, 2, 2], 10),
        ([1, 1, 2, 2, 3], 30),
        ([1, 1, 2, 2, 4], 30),
        ([1, 1, 2, 2, 5], 30),
        ([1, 1, 2, 2, 6], 30),
        ([1, 1, 2, 3, 3], 30),
        ([1, 1, 2, 3, 4], 60),
        ([1, 1, 2, 3, 5], 60),
        ([1, 1, 2, 3, 6], 60),
        ([1, 1, 2, 4, 4], 30),
        ([1, 1, 2, 4, 5], 60),
        ([1, 1, 2, 4, 6], 60),
        ([1, 1, 2, 5, 5], 30),
        ([1, 1, 2, 5, 6], 60),
        ([1, 1, 2, 6, 6], 30),
        ([1, 1, 3, 3, 3], 10),
        ([1, 1, 3, 3, 4], 30),
        ([1, 1, 3, 3, 5], 30),
        ([1, 1, 3, 3, 6], 30),
        ([1, 1, 3, 4, 4], 30),
        ([1, 1, 3, 4, 5], 60),
        ([1, 1, 3, 4, 6], 60),
        ([1, 1, 3, 5, 5], 30),
        ([1, 1, 3, 5, 6], 60),
        ([1, 1, 3, 6, 6], 30),
        ([1, 1, 4, 4, 4], 10),
        ([1, 1, 4, 4, 5], 30),
        ([1, 1, 4, 4, 6], 30),
        ([1, 1, 4, 5, 5], 30),
        ([1, 1, 4, 5, 6], 60),
        ([1, 1, 4, 6, 6], 30),
        ([1, 1, 5, 5, 5], 10),
        ([1, 1, 5, 5, 6], 30),
        ([1, 1, 5, 6, 6], 30),
        ([1, 1, 6, 6, 6], 10),
        ([1, 2, 2, 2, 2], 5),
        ([1, 2, 2, 2, 3], 20),
        ([1, 2, 2, 2, 4], 20),
        ([1, 2, 2, 2, 5], 20),
        ([1, 2, 2, 2, 6], 20),
        ([1, 2, 2, 3, 3], 30),
        ([1, 2, 2, 3, 4], 60),
        ([1, 2, 2, 3, 5], 60),
        ([1, 2, 2, 3, 6], 60),
        ([1, 2, 2, 4, 4], 30),
        ([1, 2, 2, 4, 5], 60),
        ([1, 2, 2, 4, 6], 60),
        ([1, 2, 2, 5, 5], 30),
        ([1, 2, 2, 5, 6], 60),
        ([1, 2, 2, 6, 6], 30),
        ([1, 2, 3, 3, 3], 20),
        ([1, 2, 3, 3, 4], 60),
        ([1, 2, 3, 3, 5], 60),
        ([1, 2, 3, 3, 6], 60),
        ([1, 2, 3, 4, 4], 60),
        ([1, 2, 3, 4, 5], 120),
        ([1, 2, 3, 4, 6], 120),
        ([1, 2, 3, 5, 5], 60),
        ([1, 2, 3, 5, 6], 120),
        ([1, 2, 3, 6, 6], 60),
        ([1, 2, 4, 4, 4], 20),
        ([1, 2, 4, 4, 5], 60),
        ([1, 2, 4, 4, 6], 60),
        ([1, 2, 4, 5, 5], 60),
        ([1, 2, 4, 5, 6], 120),
        ([1, 2, 4, 6, 6], 60),
        ([1, 2, 5, 5, 5], 20),
        ([1, 2, 5, 5, 6], 60),
        ([1, 2, 5, 6, 6], 60),
        ([1, 2, 6, 6, 6], 20),
        ([1, 3, 3, 3, 3], 5),
        ([1, 3, 3, 3, 4], 20),
        ([1, 3, 3, 3, 5], 20),
        ([1, 3, 3, 3, 6], 20),
        ([1, 3, 3, 4, 4], 30),
        ([1, 3, 3, 4, 5], 60),
        ([1, 3, 3, 4, 6], 60),
        ([1, 3, 3, 5, 5], 30),
        ([1, 3, 3, 5, 6], 60),
        ([1, 3, 3, 6, 6], 30),
        ([1, 3, 4, 4, 4], 20),
        ([1, 3, 4, 4, 5], 60),
        ([1, 3, 4, 4, 6], 60),
        ([1, 3, 4, 5, 5], 60),
        ([1, 3, 4, 5, 6], 120),
        ([1, 3, 4, 6, 6], 60),
        ([1, 3, 5, 5, 5], 20),
        ([1, 3, 5, 5, 6], 60),
        ([1, 3, 5, 6, 6], 60),
        ([1, 3, 6, 6, 6], 20),
        ([1, 4, 4, 4, 4], 5),
        ([1, 4, 4, 4, 5], 20),
        ([1, 4, 4, 4, 6], 20),
        ([1, 4, 4, 5, 5], 30),
        ([1, 4, 4, 5, 6], 60),
        ([1, 4, 4, 6, 6], 30),
        ([1, 4, 5, 5, 5], 20),
        ([1, 4, 5, 5, 6], 60),
        ([1, 4, 5, 6, 6], 60),
        ([1, 4, 6, 6, 6], 20),
        ([1, 5, 5, 5, 5], 5),
        ([1, 5, 5, 5, 6], 20),
        ([1, 5, 5, 6, 6], 30),
        ([1, 5, 6, 6, 6], 20),
        ([1, 6, 6, 6, 6], 5),
        ([2, 2, 2, 2, 2], 1),
        ([2, 2, 2, 2, 3], 5),
        ([2, 2, 2, 2, 4], 5),
        ([2, 2, 2, 2, 5], 5),
        ([2, 2, 2, 2, 6], 5),
        ([2, 2, 2, 3, 3], 10),
        ([2, 2, 2, 3, 4], 20),
        ([2, 2, 2, 3, 5], 20),
        ([2, 2, 2, 3, 6], 20),
        ([2, 2, 2, 4, 4], 10),
        ([2, 2, 2, 4, 5], 20),
        ([2, 2, 2, 4, 6], 20),
        ([2, 2, 2, 5, 5], 10),
        ([2, 2, 2, 5, 6], 20),
        ([2, 2, 2, 6, 6], 10),
        ([2, 2, 3, 3, 3], 10),
        ([2, 2, 3, 3, 4], 30),
        ([2, 2, 3, 3, 5], 30),
        ([2, 2, 3, 3, 6], 30),
        ([2, 2, 3, 4, 4], 30),
        ([2, 2, 3, 4, 5], 60),
        ([2, 2, 3, 4, 6], 60),
        ([2, 2, 3, 5, 5], 30),
        ([2, 2, 3, 5, 6], 60),
        ([2, 2, 3, 6, 6], 30),
        ([2, 2, 4, 4, 4], 10),
        ([2, 2, 4, 4, 5], 30),
        ([2, 2, 4, 4, 6], 30),
        ([2, 2, 4, 5, 5], 30),
        ([2, 2, 4, 5, 6], 60),
        ([2, 2, 4, 6, 6], 30),
        ([2, 2, 5, 5, 5], 10),
        ([2, 2, 5, 5, 6], 30),
        ([2, 2, 5, 6, 6], 30),
        ([2, 2, 6, 6, 6], 10),
        ([2, 3, 3, 3, 3], 5),
        ([2, 3, 3, 3, 4], 20),
        ([2, 3, 3, 3, 5], 20),
        ([2, 3, 3, 3, 6], 20),
        ([2, 3, 3, 4, 4], 30),
        ([2, 3, 3, 4, 5], 60),
        ([2, 3, 3, 4, 6], 60),
        ([2, 3, 3, 5, 5], 30),
        ([2, 3, 3, 5, 6], 60),
        ([2, 3, 3, 6, 6], 30),
        ([2, 3, 4, 4, 4], 20),
        ([2, 3, 4, 4, 5], 60),
        ([2, 3, 4, 4, 6], 60),
        ([2, 3, 4, 5, 5], 60),
        ([2, 3, 4, 5, 6], 120),
        ([2, 3, 4, 6, 6], 60),
        ([2, 3, 5, 5, 5], 20),
        ([2, 3, 5, 5, 6], 60),
        ([2, 3, 5, 6, 6], 60),
        ([2, 3, 6, 6, 6], 20),
        ([2, 4, 4, 4, 4], 5),
        ([2, 4, 4, 4, 5], 20),
        ([2, 4, 4, 4, 6], 20),
        ([2, 4, 4, 5, 5], 30),
        ([2, 4, 4, 5, 6], 60),
        ([2, 4, 4, 6, 6], 30),
        ([2, 4, 5, 5, 5], 20),
        ([2, 4, 5, 5, 6], 60),
        ([2, 4, 5, 6, 6], 60),
        ([2, 4, 6, 6, 6], 20),
        ([2, 5, 5, 5, 5], 5),
        ([2, 5, 5, 5, 6], 20),
        ([2, 5, 5, 6, 6], 30),
        ([2, 5, 6, 6, 6], 20),
        ([2, 6, 6, 6, 6], 5),
        ([3, 3, 3, 3, 3], 1),
        ([3, 3, 3, 3, 4], 5),
        ([3, 3, 3, 3, 5], 5),
        ([3, 3, 3, 3, 6], 5),
        ([3, 3, 3, 4, 4], 10),
        ([3, 3, 3, 4, 5], 20),
        ([3, 3, 3, 4, 6], 20),
        ([3, 3, 3, 5, 5], 10),
        ([3, 3, 3, 5, 6], 20),
        ([3, 3, 3, 6, 6], 10),
        ([3, 3, 4, 4, 4], 10),
        ([3, 3, 4, 4, 5], 30),
        ([3, 3, 4, 4, 6], 30),
        ([3, 3, 4, 5, 5], 30),
        ([3, 3, 4, 5, 6], 60),
        ([3, 3, 4, 6, 6], 30),
        ([3, 3, 5, 5, 5], 10),
        ([3, 3, 5, 5, 6], 30),
        ([3, 3, 5, 6, 6], 30),
        ([3, 3, 6, 6, 6], 10),
        ([3, 4, 4, 4, 4], 5),
        ([3, 4, 4, 4, 5], 20),
        ([3, 4, 4, 4, 6], 20),
        ([3, 4, 4, 5, 5], 30),
        ([3, 4, 4, 5, 6], 60),
        ([3, 4, 4, 6, 6], 30),
        ([3, 4, 5, 5, 5], 20),
        ([3, 4, 5, 5, 6], 60),
        ([3, 4, 5, 6, 6], 60),
        ([3, 4, 6, 6, 6], 20),
        ([3, 5, 5, 5, 5], 5),
        ([3, 5, 5, 5, 6], 20),
        ([3, 5, 5, 6, 6], 30),
        ([3, 5, 6, 6, 6], 20),
        ([3, 6, 6, 6, 6], 5),
        ([4, 4, 4, 4, 4], 1),
        ([4, 4, 4, 4, 5], 5),
        ([4, 4, 4, 4, 6], 5),
        ([4, 4, 4, 5, 5], 10),
        ([4, 4, 4, 5, 6], 20),
        ([4, 4, 4, 6, 6], 10),
        ([4, 4, 5, 5, 5], 10),
        ([4, 4, 5, 5, 6], 30),
        ([4, 4, 5, 6, 6], 30),
        ([4, 4, 6, 6, 6], 10),
        ([4, 5, 5, 5, 5], 5),
        ([4, 5, 5, 5, 6], 20),
        ([4, 5, 5, 6, 6], 30),
        ([4, 5, 6, 6, 6], 20),
        ([4, 6, 6, 6, 6], 5),
        ([5, 5, 5, 5, 5], 1),
        ([5, 5, 5, 5, 6], 5),
        ([5, 5, 5, 6, 6], 10),
        ([5, 5, 6, 6, 6], 10),
        ([5, 6, 6, 6, 6], 5),
        ([6, 6, 6, 6, 6], 1),
    ],
    [
        ([1, 1, 1, 1, 1, 1], 1),
        ([1, 1, 1, 1, 1, 2], 6),
        ([1, 1, 1, 1, 1, 3], 6),
        ([1, 1, 1, 1, 1, 4], 6),
        ([1, 1, 1, 1, 1, 5], 6),
        ([1, 1, 1, 1, 1, 6], 6),
        ([1, 1, 1, 1, 2, 2], 15),
        ([1, 1, 1, 1, 2, 3], 30),
        ([1, 1, 1, 1, 2, 4], 30),
        ([1, 1, 1, 1, 2, 5], 30),
        ([1, 1, 1, 1, 2, 6], 30),
        ([1, 1, 1, 1, 3, 3], 15),
        ([1, 1, 1, 1, 3, 4], 30),
        ([1, 1, 1, 1, 3, 5], 30),
        ([1, 1, 1, 1, 3, 6], 30),
        ([1, 1, 1, 1, 4, 4], 15),
        ([1, 1, 1, 1, 4, 5], 30),
        ([1, 1, 1, 1, 4, 6], 30),
        ([1, 1, 1, 1, 5, 5], 15),
        ([1, 1, 1, 1, 5, 6], 30),
        ([1, 1, 1, 1, 6, 6], 15),
        ([1, 1, 1, 2, 2, 2], 20),
        ([1, 1, 1, 2, 2, 3], 60),
        ([1, 1, 1, 2, 2, 4], 60),
        ([1, 1, 1, 2, 2, 5], 60),
        ([1, 1, 1, 2, 2, 6], 60),
        ([1, 1, 1, 2, 3, 3], 60),
        ([1, 1, 1, 2, 3, 4], 120),
        ([1, 1, 1, 2, 3, 5], 120),
        ([1, 1, 1, 2, 3, 6], 120),
        ([1, 1, 1, 2, 4, 4], 60),
        ([1, 1, 1, 2, 4, 5], 120),
        ([1, 1, 1, 2, 4, 6], 120),
        ([1, 1, 1, 2, 5, 5], 60),
        ([1, 1, 1, 2, 5, 6], 120),
        ([1, 1, 1, 2, 6, 6], 60),
        ([1, 1, 1, 3, 3, 3], 20),
        ([1, 1, 1, 3, 3, 4], 60),
        ([1, 1, 1, 3, 3, 5], 60),
        ([1, 1, 1, 3, 3, 6], 60),
        ([1, 1, 1, 3, 4, 4], 60),
        ([1, 1, 1, 3, 4, 5], 120),
        ([1, 1, 1, 3, 4, 6], 120),
        ([1, 1, 1, 3, 5, 5], 60),
        ([1, 1, 1, 3, 5, 6], 120),
        ([1, 1, 1, 3, 6, 6], 60),
        ([1, 1, 1, 4, 4, 4], 20),
        ([1, 1, 1, 4, 4, 5], 60),
        ([1, 1, 1, 4, 4, 6], 60),
        ([1, 1, 1, 4, 5, 5], 60),
        ([1, 1, 1, 4, 5, 6], 120),
        ([1, 1, 1, 4, 6, 6], 60),
        ([1, 1, 1, 5, 5, 5], 20),
        ([1, 1, 1, 5, 5, 6], 60),
        ([1, 1, 1, 5, 6, 6], 60),
        ([1, 1, 1, 6, 6, 6], 20),
        ([1, 1, 2, 2, 2, 2], 15),
        ([1, 1, 2, 2, 2, 3], 60),
        ([1, 1, 2, 2, 2, 4], 60),
        ([1, 1, 2, 2, 2, 5], 60),
        ([1, 1, 2, 2, 2, 6], 60),
        ([1, 1, 2, 2, 3, 3], 90),
        ([1, 1, 2, 2, 3, 4], 180),
        ([1, 1, 2, 2, 3, 5], 180),
        ([1, 1, 2, 2, 3, 6], 180),
        ([1, 1, 2, 2, 4, 4], 90),
        ([1, 1, 2, 2, 4, 5], 180),
        ([1, 1, 2, 2, 4, 6], 180),
        ([1, 1, 2, 2, 5, 5], 90),
        ([1, 1, 2, 2, 5, 6], 180),
        ([1, 1, 2, 2, 6, 6], 90),
        ([1, 1, 2, 3, 3, 3], 60),
        ([1, 1, 2, 3, 3, 4], 180),
        ([1, 1, 2, 3, 3, 5], 180),
        ([1, 1, 2, 3, 3, 6], 180),
        ([1, 1, 2, 3, 4, 4], 180),
        ([1, 1, 2, 3, 4, 5], 360),
        ([1, 1, 2, 3, 4, 6], 360),
        ([1, 1, 2, 3, 5, 5], 180),
        ([1, 1, 2, 3, 5, 6], 360),
        ([1, 1, 2, 3, 6, 6], 180),
        ([1, 1, 2, 4, 4, 4], 60),
        ([1, 1, 2, 4, 4, 5], 180),
        ([1, 1, 2, 4, 4, 6], 180),
        ([1, 1, 2, 4, 5, 5], 180),
        ([1, 1, 2, 4, 5, 6], 360),
        ([1, 1, 2, 4, 6, 6], 180),
        ([1, 1, 2, 5, 5, 5], 60),
        ([1, 1, 2, 5, 5, 6], 180),
        ([1, 1, 2, 5, 6, 6], 180),
        ([1, 1, 2, 6, 6, 6], 60),
        ([1, 1, 3, 3, 3, 3], 15),
        ([1, 1, 3, 3, 3, 4], 60),
        ([1, 1, 3, 3, 3, 5], 60),
        ([1, 1, 3, 3, 3, 6], 60),
        ([1, 1, 3, 3, 4, 4], 90),
        ([1, 1, 3, 3, 4, 5], 180),
        ([1, 1, 3, 3, 4, 6], 180),
        ([1, 1, 3, 3, 5, 5], 90),
        ([1, 1, 3, 3, 5, 6], 180),
        ([1, 1, 3, 3, 6, 6], 90),
        ([1, 1, 3, 4, 4, 4], 60),
        ([1, 1, 3, 4, 4, 5], 180),
        ([1, 1, 3, 4, 4, 6], 180),
        ([1, 1, 3, 4, 5, 5], 180),
        ([1, 1, 3, 4, 5, 6], 360),
        ([1, 1, 3, 4, 6, 6], 180),
        ([1, 1, 3, 5, 5, 5], 60),
        ([1, 1, 3, 5, 5, 6], 180),
        ([1, 1, 3, 5, 6, 6], 180),
        ([1, 1, 3, 6, 6, 6], 60),
        ([1, 1, 4, 4, 4, 4], 15),
        ([1, 1, 4, 4, 4, 5], 60),
        ([1, 1, 4, 4, 4, 6], 60),
        ([1, 1, 4, 4, 5, 5], 90),
        ([1, 1, 4, 4, 5, 6], 180),
        ([1, 1, 4, 4, 6, 6], 90),
        ([1, 1, 4, 5, 5, 5], 60),
        ([1, 1, 4, 5, 5, 6], 180),
        ([1, 1, 4, 5, 6, 6], 180),
        ([1, 1, 4, 6, 6, 6], 60),
        ([1, 1, 5, 5, 5, 5], 15),
        ([1, 1, 5, 5, 5, 6], 60),
        ([1, 1, 5, 5, 6, 6], 90),
        ([1, 1, 5, 6, 6, 6], 60),
        ([1, 1, 6, 6, 6, 6], 15),
        ([1, 2, 2, 2, 2, 2], 6),
        ([1, 2, 2, 2, 2, 3], 30),
        ([1, 2, 2, 2, 2, 4], 30),
        ([1, 2, 2, 2, 2, 5], 30),
        ([1, 2, 2, 2, 2, 6], 30),
        ([1, 2, 2, 2, 3, 3], 60),
        ([1, 2, 2, 2, 3, 4], 120),
        ([1, 2, 2, 2, 3, 5], 120),
        ([1, 2, 2, 2, 3, 6], 120),
        ([1, 2, 2, 2, 4, 4], 60),
        ([1, 2, 2, 2, 4, 5], 120),
        ([1, 2, 2, 2, 4, 6], 120),
        ([1, 2, 2, 2, 5, 5], 60),
        ([1, 2, 2, 2, 5, 6], 120),
        ([1, 2, 2, 2, 6, 6], 60),
        ([1, 2, 2, 3, 3, 3], 60),
        ([1, 2, 2, 3, 3, 4], 180),
        ([1, 2, 2, 3, 3, 5], 180),
        ([1, 2, 2, 3, 3, 6], 180),
        ([1, 2, 2, 3, 4, 4], 180),
        ([1, 2, 2, 3, 4, 5], 360),
        ([1, 2, 2, 3, 4, 6], 360),
        ([1, 2, 2, 3, 5, 5], 180),
        ([1, 2, 2, 3, 5, 6], 360),
        ([1, 2, 2, 3, 6, 6], 180),
        ([1, 2, 2, 4, 4, 4], 60),
        ([1, 2, 2, 4, 4, 5], 180),
        ([1, 2, 2, 4, 4, 6], 180),
        ([1, 2, 2, 4, 5, 5], 180),
        ([1, 2, 2, 4, 5, 6], 360),
        ([1, 2, 2, 4, 6, 6], 180),
        ([1, 2, 2, 5, 5, 5], 60),
        ([1, 2, 2, 5, 5, 6], 180),
        ([1, 2, 2, 5, 6, 6], 180),
        ([1, 2, 2, 6, 6, 6], 60),
        ([1, 2, 3, 3, 3, 3], 30),
        ([1, 2, 3, 3, 3, 4], 120),
        ([1, 2, 3, 3, 3, 5], 120),
        ([1, 2, 3, 3, 3, 6], 120),
        ([1, 2, 3, 3, 4, 4], 180),
        ([1, 2, 3, 3, 4, 5], 360),
        ([1, 2, 3, 3, 4, 6], 360),
        ([1, 2, 3, 3, 5, 5], 180),
        ([1, 2, 3, 3, 5, 6], 360),
        ([1, 2, 3, 3, 6, 6], 180),
        ([1, 2, 3, 4, 4, 4], 120),
        ([1, 2, 3, 4, 4, 5], 360),
        ([1, 2, 3, 4, 4, 6], 360),
        ([1, 2, 3, 4, 5, 5], 360),
        ([1, 2, 3, 4, 5, 6], 720),
        ([1, 2, 3, 4, 6, 6], 360),
        ([1, 2, 3, 5, 5, 5], 120),
        ([1, 2, 3, 5, 5, 6], 360),
        ([1, 2, 3, 5, 6, 6], 360),
        ([1, 2, 3, 6, 6, 6], 120),
        ([1, 2, 4, 4, 4, 4], 30),
        ([1, 2, 4, 4, 4, 5], 120),
        ([1, 2, 4, 4, 4, 6], 120),
        ([1, 2, 4, 4, 5, 5], 180),
        ([1, 2, 4, 4, 5, 6], 360),
        ([1, 2, 4, 4, 6, 6], 180),
        ([1, 2, 4, 5, 5, 5], 120),
        ([1, 2, 4, 5, 5, 6], 360),
        ([1, 2, 4, 5, 6, 6], 360),
        ([1, 2, 4, 6, 6, 6], 120),
        ([1, 2, 5, 5, 5, 5], 30),
        ([1, 2, 5, 5, 5, 6], 120),
        ([1, 2, 5, 5, 6, 6], 180),
        ([1, 2, 5, 6, 6, 6], 120),
        ([1, 2, 6, 6, 6, 6], 30),
        ([1, 3, 3, 3, 3, 3], 6),
        ([1, 3, 3, 3, 3, 4], 30),
        ([1, 3, 3, 3, 3, 5], 30),
        ([1, 3, 3, 3, 3, 6], 30),
        ([1, 3, 3, 3, 4, 4], 60),
        ([1, 3, 3, 3, 4, 5], 120),
        ([1, 3, 3, 3, 4, 6], 120),
        ([1, 3, 3, 3, 5, 5], 60),
        ([1, 3, 3, 3, 5, 6], 120),
        ([1, 3, 3, 3, 6, 6], 60),
        ([1, 3, 3, 4, 4, 4], 60),
        ([1, 3, 3, 4, 4, 5], 180),
        ([1, 3, 3, 4, 4, 6], 180),
        ([1, 3, 3, 4, 5, 5], 180),
        ([1, 3, 3, 4, 5, 6], 360),
        ([1, 3, 3, 4, 6, 6], 180),
        ([1, 3, 3, 5, 5, 5], 60),
        ([1, 3, 3, 5, 5, 6], 180),
        ([1, 3, 3, 5, 6, 6], 180),
        ([1, 3, 3, 6, 6, 6], 60),
        ([1, 3, 4, 4, 4, 4], 30),
        ([1, 3, 4, 4, 4, 5], 120),
        ([1, 3, 4, 4, 4, 6], 120),
        ([1, 3, 4, 4, 5, 5], 180),
        ([1, 3, 4, 4, 5, 6], 360),
        ([1, 3, 4, 4, 6, 6], 180),
        ([1, 3, 4, 5, 5, 5], 120),
        ([1, 3, 4, 5, 5, 6], 360),
        ([1, 3, 4, 5, 6, 6], 360),
        ([1, 3, 4, 6, 6, 6], 120),
        ([1, 3, 5, 5, 5, 5], 30),
        ([1, 3, 5, 5, 5, 6], 120),
        ([1, 3, 5, 5, 6, 6], 180),
        ([1, 3, 5, 6, 6, 6], 120),
        ([1, 3, 6, 6, 6, 6], 30),
        ([1, 4, 4, 4, 4, 4], 6),
        ([1, 4, 4, 4, 4, 5], 30),
        ([1, 4, 4, 4, 4, 6], 30),
        ([1, 4, 4, 4, 5, 5], 60),
        ([1, 4, 4, 4, 5, 6], 120),
        ([1, 4, 4, 4, 6, 6], 60),
        ([1, 4, 4, 5, 5, 5], 60),
        ([1, 4, 4, 5, 5, 6], 180),
        ([1, 4, 4, 5, 6, 6], 180),
        ([1, 4, 4, 6, 6, 6], 60),
        ([1, 4, 5, 5, 5, 5], 30),
        ([1, 4, 5, 5, 5, 6], 120),
        ([1, 4, 5, 5, 6, 6], 180),
        ([1, 4, 5, 6, 6, 6], 120),
        ([1, 4, 6, 6, 6, 6], 30),
        ([1, 5, 5, 5, 5, 5], 6),
        ([1, 5, 5, 5, 5, 6], 30),
        ([1, 5, 5, 5, 6, 6], 60),
        ([1, 5, 5, 6, 6, 6], 60),
        ([1, 5, 6, 6, 6, 6], 30),
        ([1, 6, 6, 6, 6, 6], 6),
        ([2, 2, 2, 2, 2, 2], 1),
        ([2, 2, 2, 2, 2, 3], 6),
        ([2, 2, 2, 2, 2, 4], 6),
        ([2, 2, 2, 2, 2, 5], 6),
        ([2, 2, 2, 2, 2, 6], 6),
        ([2, 2, 2, 2, 3, 3], 15),
        ([2, 2, 2, 2, 3, 4], 30),
        ([2, 2, 2, 2, 3, 5], 30),
        ([2, 2, 2, 2, 3, 6], 30),
        ([2, 2, 2, 2, 4, 4], 15),
        ([2, 2, 2, 2, 4, 5], 30),
        ([2, 2, 2, 2, 4, 6], 30),
        ([2, 2, 2, 2, 5, 5], 15),
        ([2, 2, 2, 2, 5, 6], 30),
        ([2, 2, 2, 2, 6, 6], 15),
        ([2, 2, 2, 3, 3, 3], 20),
        ([2, 2, 2, 3, 3, 4], 60),
        ([2, 2, 2, 3, 3, 5], 60),
        ([2, 2, 2, 3, 3, 6], 60),
        ([2, 2, 2, 3, 4, 4], 60),
        ([2, 2, 2, 3, 4, 5], 120),
        ([2, 2, 2, 3, 4, 6], 120),
        ([2, 2, 2, 3, 5, 5], 60),
        ([2, 2, 2, 3, 5, 6], 120),
        ([2, 2, 2, 3, 6, 6], 60),
        ([2, 2, 2, 4, 4, 4], 20),
        ([2, 2, 2, 4, 4, 5], 60),
        ([2, 2, 2, 4, 4, 6], 60),
        ([2, 2, 2, 4, 5, 5], 60),
        ([2, 2, 2, 4, 5, 6], 120),
        ([2, 2, 2, 4, 6, 6], 60),
        ([2, 2, 2, 5, 5, 5], 20),
        ([2, 2, 2, 5, 5, 6], 60),
        ([2, 2, 2, 5, 6, 6], 60),
        ([2, 2, 2, 6, 6, 6], 20),
        ([2, 2, 3, 3, 3, 3], 15),
        ([2, 2, 3, 3, 3, 4], 60),
        ([2, 2, 3, 3, 3, 5], 60),
        ([2, 2, 3, 3, 3, 6], 60),
        ([2, 2, 3, 3, 4, 4], 90),
        ([2, 2, 3, 3, 4, 5], 180),
        ([2, 2, 3, 3, 4, 6], 180),
        ([2, 2, 3, 3, 5, 5], 90),
        ([2, 2, 3, 3, 5, 6], 180),
        ([2, 2, 3, 3, 6, 6], 90),
        ([2, 2, 3, 4, 4, 4], 60),
        ([2, 2, 3, 4, 4, 5], 180),
        ([2, 2, 3, 4, 4, 6], 180),
        ([2, 2, 3, 4, 5, 5], 180),
        ([2, 2, 3, 4, 5, 6], 360),
        ([2, 2, 3, 4, 6, 6], 180),
        ([2, 2, 3, 5, 5, 5], 60),
        ([2, 2, 3, 5, 5, 6], 180),
        ([2, 2, 3, 5, 6, 6], 180),
        ([2, 2, 3, 6, 6, 6], 60),
        ([2, 2, 4, 4, 4, 4], 15),
        ([2, 2, 4, 4, 4, 5], 60),
        ([2, 2, 4, 4, 4, 6], 60),
        ([2, 2, 4, 4, 5, 5], 90),
        ([2, 2, 4, 4, 5, 6], 180),
        ([2, 2, 4, 4, 6, 6], 90),
        ([2, 2, 4, 5, 5, 5], 60),
        ([2, 2, 4, 5, 5, 6], 180),
        ([2, 2, 4, 5, 6, 6], 180),
        ([2, 2, 4, 6, 6, 6], 60),
        ([2, 2, 5, 5, 5, 5], 15),
        ([2, 2, 5, 5, 5, 6], 60),
        ([2, 2, 5, 5, 6, 6], 90),
        ([2, 2, 5, 6, 6, 6], 60),
        ([2, 2, 6, 6, 6, 6], 15),
        ([2, 3, 3, 3, 3, 3], 6),
        ([2, 3, 3, 3, 3, 4], 30),
        ([2, 3, 3, 3, 3, 5], 30),
        ([2, 3, 3, 3, 3, 6], 30),
        ([2, 3, 3, 3, 4, 4], 60),
        ([2, 3, 3, 3, 4, 5], 120),
        ([2, 3, 3, 3, 4, 6], 120),
        ([2, 3, 3, 3, 5, 5], 60),
        ([2, 3, 3, 3, 5, 6], 120),
        ([2, 3, 3, 3, 6, 6], 60),
        ([2, 3, 3, 4, 4, 4], 60),
        ([2, 3, 3, 4, 4, 5], 180),
        ([2, 3, 3, 4, 4, 6], 180),
        ([2, 3, 3, 4, 5, 5], 180),
        ([2, 3, 3, 4, 5, 6], 360),
        ([2, 3, 3, 4, 6, 6], 180),
        ([2, 3, 3, 5, 5, 5], 60),
        ([2, 3, 3, 5, 5, 6], 180),
        ([2, 3, 3, 5, 6, 6], 180),
        ([2, 3, 3, 6, 6, 6], 60),
        ([2, 3, 4, 4, 4, 4], 30),
        ([2, 3, 4, 4, 4, 5], 120),
        ([2, 3, 4, 4, 4, 6], 120),
        ([2, 3, 4, 4, 5, 5], 180),
        ([2, 3, 4, 4, 5, 6], 360),
        ([2, 3, 4, 4, 6, 6], 180),
        ([2, 3, 4, 5, 5, 5], 120),
        ([2, 3, 4, 5, 5, 6], 360),
        ([2, 3, 4, 5, 6, 6], 360),
        ([2, 3, 4, 6, 6, 6], 120),
        ([2, 3, 5, 5, 5, 5], 30),
        ([2, 3, 5, 5, 5, 6], 120),
        ([2, 3, 5, 5, 6, 6], 180),
        ([2, 3, 5, 6, 6, 6], 120),
        ([2, 3, 6, 6, 6, 6], 30),
        ([2, 4, 4, 4, 4, 4], 6),
        ([2, 4, 4, 4, 4, 5], 30),
        ([2, 4, 4, 4, 4, 6], 30),
        ([2, 4, 4, 4, 5, 5], 60),
        ([2, 4, 4, 4, 5, 6], 120),
        ([2, 4, 4, 4, 6, 6], 60),
        ([2, 4, 4, 5, 5, 5], 60),
        ([2, 4, 4, 5, 5, 6], 180),
        ([2, 4, 4, 5, 6, 6], 180),
        ([2, 4, 4, 6, 6, 6], 60),
        ([2, 4, 5, 5, 5, 5], 30),
        ([2, 4, 5, 5, 5, 6], 120),
        ([2, 4, 5, 5, 6, 6], 180),
        ([2, 4, 5, 6, 6, 6], 120),
        ([2, 4, 6, 6, 6, 6], 30),
        ([2, 5, 5, 5, 5, 5], 6),
        ([2, 5, 5, 5, 5, 6], 30),
        ([2, 5, 5, 5, 6, 6], 60),
        ([2, 5, 5, 6, 6, 6], 60),
        ([2, 5, 6, 6, 6, 6], 30),
        ([2, 6, 6, 6, 6, 6], 6),
        ([3, 3, 3, 3, 3, 3], 1),
        ([3, 3, 3, 3, 3, 4], 6),
        ([3, 3, 3, 3, 3, 5], 6),
        ([3, 3, 3, 3, 3, 6], 6),
        ([3, 3, 3, 3, 4, 4], 15),
        ([3, 3, 3, 3, 4, 5], 30),
        ([3, 3, 3, 3, 4, 6], 30),
        ([3, 3, 3, 3, 5, 5], 15),
        ([3, 3, 3, 3, 5, 6], 30),
        ([3, 3, 3, 3, 6, 6], 15),
        ([3, 3, 3, 4, 4, 4], 20),
        ([3, 3, 3, 4, 4, 5], 60),
        ([3, 3, 3, 4, 4, 6], 60),
        ([3, 3, 3, 4, 5, 5], 60),
        ([3, 3, 3, 4, 5, 6], 120),
        ([3, 3, 3, 4, 6, 6], 60),
        ([3, 3, 3, 5, 5, 5], 20),
        ([3, 3, 3, 5, 5, 6], 60),
        ([3, 3, 3, 5, 6, 6], 60),
        ([3, 3, 3, 6, 6, 6], 20),
        ([3, 3, 4, 4, 4, 4], 15),
        ([3, 3, 4, 4, 4, 5], 60),
        ([3, 3, 4, 4, 4, 6], 60),
        ([3, 3, 4, 4, 5, 5], 90),
        ([3, 3, 4, 4, 5, 6], 180),
        ([3, 3, 4, 4, 6, 6], 90),
        ([3, 3, 4, 5, 5, 5], 60),
        ([3, 3, 4, 5, 5, 6], 180),
        ([3, 3, 4, 5, 6, 6], 180),
        ([3, 3, 4, 6, 6, 6], 60),
        ([3, 3, 5, 5, 5, 5], 15),
        ([3, 3, 5, 5, 5, 6], 60),
        ([3, 3, 5, 5, 6, 6], 90),
        ([3, 3, 5, 6, 6, 6], 60),
        ([3, 3, 6, 6, 6, 6], 15),
        ([3, 4, 4, 4, 4, 4], 6),
        ([3, 4, 4, 4, 4, 5], 30),
        ([3, 4, 4, 4, 4, 6], 30),
        ([3, 4, 4, 4, 5, 5], 60),
        ([3, 4, 4, 4, 5, 6], 120),
        ([3, 4, 4, 4, 6, 6], 60),
        ([3, 4, 4, 5, 5, 5], 60),
        ([3, 4, 4, 5, 5, 6], 180),
        ([3, 4, 4, 5, 6, 6], 180),
        ([3, 4, 4, 6, 6, 6], 60),
        ([3, 4, 5, 5, 5, 5], 30),
        ([3, 4, 5, 5, 5, 6], 120),
        ([3, 4, 5, 5, 6, 6], 180),
        ([3, 4, 5, 6, 6, 6], 120),
        ([3, 4, 6, 6, 6, 6], 30),
        ([3, 5, 5, 5, 5, 5], 6),
        ([3, 5, 5, 5, 5, 6], 30),
        ([3, 5, 5, 5, 6, 6], 60),
        ([3, 5, 5, 6, 6, 6], 60),
        ([3, 5, 6, 6, 6, 6], 30),
        ([3, 6, 6, 6, 6, 6], 6),
        ([4, 4, 4, 4, 4, 4], 1),
        ([4, 4, 4, 4, 4, 5], 6),
        ([4, 4, 4, 4, 4, 6], 6),
        ([4, 4, 4, 4, 5, 5], 15),
        ([4, 4, 4, 4, 5, 6], 30),
        ([4, 4, 4, 4, 6, 6], 15),
        ([4, 4, 4, 5, 5, 5], 20),
        ([4, 4, 4, 5, 5, 6], 60),
        ([4, 4, 4, 5, 6, 6], 60),
        ([4, 4, 4, 6, 6, 6], 20),
        ([4, 4, 5, 5, 5, 5], 15),
        ([4, 4, 5, 5, 5, 6], 60),
        ([4, 4, 5, 5, 6, 6], 90),
        ([4, 4, 5, 6, 6, 6], 60),
        ([4, 4, 6, 6, 6, 6], 15),
        ([4, 5, 5, 5, 5, 5], 6),
        ([4, 5, 5, 5, 5, 6], 30),
        ([4, 5, 5, 5, 6, 6], 60),
        ([4, 5, 5, 6, 6, 6], 60),
        ([4, 5, 6, 6, 6, 6], 30),
        ([4, 6, 6, 6, 6, 6], 6),
        ([5, 5, 5, 5, 5, 5], 1),
        ([5, 5, 5, 5, 5, 6], 6),
        ([5, 5, 5, 5, 6, 6], 15),
        ([5, 5, 5, 6, 6, 6], 20),
        ([5, 5, 6, 6, 6, 6], 15),
        ([5, 6, 6, 6, 6, 6], 6),
        ([6, 6, 6, 6, 6, 6], 1),
    ],
);

pub const DICE_DIVISOR: [u32; 7] = [1, 6, 36, 216, 1296, 7776, 46656];

type DiceOrderMapType = (
    (),
    HashMap<[u8; 1], usize>,
    HashMap<[u8; 2], usize>,
    HashMap<[u8; 3], usize>,
    HashMap<[u8; 4], usize>,
    HashMap<[u8; 5], usize>,
    HashMap<[u8; 6], usize>,
);

pub static DICE_ORDER_MAP: Lazy<DiceOrderMapType> = Lazy::new(|| {
    fn dice_distr_to_map<const M: usize, const N: usize>(
        x: [([u8; M], u32); N],
    ) -> HashMap<[u8; M], usize> {
        x.iter().enumerate().map(|(i, &(d, _))| (d, i)).collect()
    }

    let mut map = (
        (),
        HashMap::new(),
        HashMap::new(),
        HashMap::new(),
        HashMap::new(),
        HashMap::new(),
        HashMap::new(),
    );

    map.1 = dice_distr_to_map(DICE_DISTR.1);
    map.2 = dice_distr_to_map(DICE_DISTR.2);
    map.3 = dice_distr_to_map(DICE_DISTR.3);
    map.4 = dice_distr_to_map(DICE_DISTR.4);
    map.5 = dice_distr_to_map(DICE_DISTR.5);
    map.6 = dice_distr_to_map(DICE_DISTR.6);

    map
});

pub const fn amt_dice_combinations<const N: usize>() -> usize {
    match N {
        0 => 1,
        1 => 6,
        2 => 21,
        3 => 56,
        4 => 126,
        5 => 252,
        6 => 462,
        _ => panic!("Unsupported amount of dice!"),
    }
}

pub static DICE_REROLL_MATRICES: Lazy<[Array3<f32>; 6]> = Lazy::new(|| {
    fn loop_rerolls<const M: usize, const N: usize, const K: usize>(
        distr: &[([u8; K], u32); N],
        dice: &DiceThrow,
        reroll: u8,
        map: &HashMap<[u8; M], usize>,
        probs: &mut [f32],
    ) {
        let div = 1.0 / DICE_DIVISOR[K] as f32;

        for &(rethrow, prob) in distr.iter() {
            let new_throw = dice.overwrite_reroll::<M, K>(reroll, rethrow);

            let ti = map[&new_throw.collect_dice()];

            probs[ti] = div.mul_add(prob as f32, probs[ti]);
        }
    }

    fn make_matrix<const M: usize, const N: usize>(
        distr: &[([u8; M], u32); N],
        map: &HashMap<[u8; M], usize>,
    ) -> Array3<f32> {
        let mut mat =
            Array3::from_shape_simple_fn([N, 2usize.pow(M as u32), N], || 0.0);

        for (i, (mut mat, &(dice, _))) in
            mat.outer_iter_mut().zip(distr).enumerate()
        {
            let dice = DiceThrow::from(dice);

            mat[[0, i]] = 1.0;

            for (i, mut row) in mat.rows_mut().into_iter().enumerate().skip(1) {
                let reroll = i as u8;
                match reroll.count_ones() {
                    1 => loop_rerolls(
                        &DICE_DISTR.1,
                        &dice,
                        reroll,
                        map,
                        row.as_slice_mut().unwrap(),
                    ),
                    2 => loop_rerolls(
                        &DICE_DISTR.2,
                        &dice,
                        reroll,
                        map,
                        row.as_slice_mut().unwrap(),
                    ),
                    3 => loop_rerolls(
                        &DICE_DISTR.3,
                        &dice,
                        reroll,
                        map,
                        row.as_slice_mut().unwrap(),
                    ),
                    4 => loop_rerolls(
                        &DICE_DISTR.4,
                        &dice,
                        reroll,
                        map,
                        row.as_slice_mut().unwrap(),
                    ),
                    5 => loop_rerolls(
                        &DICE_DISTR.5,
                        &dice,
                        reroll,
                        map,
                        row.as_slice_mut().unwrap(),
                    ),
                    6 => loop_rerolls(
                        &DICE_DISTR.6,
                        &dice,
                        reroll,
                        map,
                        row.as_slice_mut().unwrap(),
                    ),
                    _ => panic!(),
                };
            }
        }

        mat
    }

    [
        make_matrix(&DICE_DISTR.1, &DICE_ORDER_MAP.1),
        make_matrix(&DICE_DISTR.2, &DICE_ORDER_MAP.2),
        make_matrix(&DICE_DISTR.3, &DICE_ORDER_MAP.3),
        make_matrix(&DICE_DISTR.4, &DICE_ORDER_MAP.4),
        make_matrix(&DICE_DISTR.5, &DICE_ORDER_MAP.5),
        make_matrix(&DICE_DISTR.6, &DICE_ORDER_MAP.6),
    ]
});

pub static DICE_PROBS_VECTORS: Lazy<[Array1<f32>; 6]> = Lazy::new(|| {
    fn make_vec<const M: usize, const N: usize>(
        distr: &[([u8; M], u32); N],
    ) -> Array1<f32> {
        let div = 1.0 / DICE_DIVISOR[M] as f32;
        let vec: Vec<_> = distr.iter().map(|&(_, n)| n as f32 * div).collect();
        Array1::from_shape_vec([vec.len()], vec).unwrap()
    }

    [
        make_vec(&DICE_DISTR.1),
        make_vec(&DICE_DISTR.2),
        make_vec(&DICE_DISTR.3),
        make_vec(&DICE_DISTR.4),
        make_vec(&DICE_DISTR.5),
        make_vec(&DICE_DISTR.6),
    ]
});
